import { prisma } from "./utils";

const vietnameseGrade10MathTags = [
  // ƒê·∫°i s·ªë (Algebra)
  { name: "ƒê·∫°i s·ªë", description: "ƒê·∫°i s·ªë c∆° b·∫£n, ph∆∞∆°ng tr√¨nh, b·∫•t ƒë·∫≥ng th·ª©c" },
  { name: "Ph∆∞∆°ng tr√¨nh", description: "Gi·∫£i ph∆∞∆°ng tr√¨nh b·∫≠c nh·∫•t, b·∫≠c hai v√† h·ªá ph∆∞∆°ng tr√¨nh" },
  { name: "B·∫•t ƒë·∫≥ng th·ª©c", description: "Gi·∫£i b·∫•t ƒë·∫≥ng th·ª©c v√† h·ªá b·∫•t ƒë·∫≥ng th·ª©c" },
  { name: "H√†m s·ªë", description: "Kh√°i ni·ªám h√†m s·ªë, t√≠nh ch·∫•t v√† ƒë·ªì th·ªã" },
  { name: "H√†m b·∫≠c nh·∫•t", description: "H√†m s·ªë b·∫≠c nh·∫•t y = ax + b" },
  { name: "H√†m b·∫≠c hai", description: "H√†m s·ªë b·∫≠c hai y = ax¬≤ + bx + c" },
  
  // H√¨nh h·ªçc (Geometry)
  { name: "H√¨nh h·ªçc", description: "H√¨nh h·ªçc ph·∫≥ng v√† kh√¥ng gian" },
  { name: "Vect∆°", description: "Vect∆° trong m·∫∑t ph·∫≥ng, ph√©p to√°n vect∆°" },
  { name: "T√≠ch v√¥ h∆∞·ªõng", description: "T√≠ch v√¥ h∆∞·ªõng c·ªßa hai vect∆°" },
  { name: "Ph∆∞∆°ng tr√¨nh ƒë∆∞·ªùng th·∫≥ng", description: "Ph∆∞∆°ng tr√¨nh tham s·ªë v√† t·ªïng qu√°t c·ªßa ƒë∆∞·ªùng th·∫≥ng" },
  { name: "Ph∆∞∆°ng tr√¨nh ƒë∆∞·ªùng tr√≤n", description: "Ph∆∞∆°ng tr√¨nh ƒë∆∞·ªùng tr√≤n v√† c√°c b√†i to√°n li√™n quan" },
  { name: "G√≥c tam gi√°c", description: "C√°c lo·∫°i g√≥c, tam gi√°c v√† t√≠nh ch·∫•t" },
  
  // L∆∞·ª£ng gi√°c (Trigonometry)
  { name: "L∆∞·ª£ng gi√°c", description: "H√†m s·ªë l∆∞·ª£ng gi√°c v√† c√°c c√¥ng th·ª©c" },
  { name: "Sin Cos Tan", description: "C√°c h√†m s·ªë sin, cos, tan v√† cot" },
  { name: "C√¥ng th·ª©c l∆∞·ª£ng gi√°c", description: "C√°c c√¥ng th·ª©c c·ªông, nh√¢n ƒë√¥i, h·∫° b·∫≠c" },
  { name: "Ph∆∞∆°ng tr√¨nh l∆∞·ª£ng gi√°c", description: "Gi·∫£i ph∆∞∆°ng tr√¨nh l∆∞·ª£ng gi√°c c∆° b·∫£n" },
  
  // Th·ªëng k√™ v√† x√°c su·∫•t (Statistics and Probability)
  { name: "Th·ªëng k√™", description: "Th·ªëng k√™ m√¥ t·∫£, bi·ªÉu ƒë·ªì, b·∫£ng t·∫ßn s·ªë" },
  { name: "X√°c su·∫•t", description: "X√°c su·∫•t c∆° b·∫£n, quy t·∫Øc c·ªông v√† nh√¢n" },
  { name: "T·ªï h·ª£p", description: "Ho√°n v·ªã, ch·ªânh h·ª£p, t·ªï h·ª£p" },
  
  // Gi·∫£i t√≠ch (Analysis)
  { name: "Gi·ªõi h·∫°n", description: "Gi·ªõi h·∫°n c·ªßa d√£y s·ªë v√† h√†m s·ªë" },
  { name: "ƒê·∫°o h√†m", description: "ƒê·∫°o h√†m v√† ·ª©ng d·ª•ng" },
  { name: "·ª®ng d·ª•ng ƒë·∫°o h√†m", description: "Kh·∫£o s√°t h√†m s·ªë, ti·∫øp tuy·∫øn" },
  
  // C√°c ch·ªß ƒë·ªÅ chung
  { name: "To√°n 10", description: "To√°n h·ªçc l·ªõp 10 THPT" },
  { name: "THPT", description: "Trung h·ªçc ph·ªï th√¥ng" },
  { name: "B√†i t·∫≠p", description: "B√†i t·∫≠p v√† l·ªùi gi·∫£i chi ti·∫øt" },
  { name: "√în t·∫≠p", description: "√în t·∫≠p v√† c·ªßng c·ªë ki·∫øn th·ª©c" },
  { name: "Ki·ªÉm tra", description: "ƒê·ªÅ ki·ªÉm tra v√† thi h·ªçc k·ª≥" },
  { name: "Chuy√™n ƒë·ªÅ", description: "C√°c chuy√™n ƒë·ªÅ n√¢ng cao" }
];

export async function seedTags() {
  console.log("üå± Seeding Vietnamese Grade 10 Math tags...");
  
  try {
    // Upsert each tag (create if not exists, update if exists)
    const createdTags = [];
    
    for (const tag of vietnameseGrade10MathTags) {
      const result = await prisma.tag.upsert({
        where: { name: tag.name },
        update: { 
          description: tag.description,
          verified: true 
        },
        create: {
          name: tag.name,
          description: tag.description,
          aiGenerated: false,
          verified: true
        }
      });
      createdTags.push(result);
    }
    
    console.log(`‚úÖ Successfully seeded ${createdTags.length} Vietnamese Grade 10 Math tags`);
    return createdTags;
    
  } catch (error) {
    console.error("‚ùå Error seeding tags:", error);
    throw error;
  }
}